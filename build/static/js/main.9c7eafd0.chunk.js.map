{"version":3,"sources":["components/search.jsx","components/addContact.jsx","components/showContacts.jsx","components/person.jsx","components/notification.jsx","services/contactsService.js","App.jsx","index.js"],"names":["Search","search","type","onChange","AddContact","props","value","newName","handleName","newNumber","handleNumber","onClick","handleClick","disabled","buttonStatus","ShowContacts","people","Person","person","removeContact","className","name","number","Notification","message","messageClass","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","filtered","setFilterd","newFilter","setNewFilter","errorMessage","setErrorMessage","setMessageClass","map","key","contact","find","window","confirm","contactService","res","Axios","deleteContact","useEffect","allContacts","notification","event","String","target","filter","elem","includes","preventDefault","some","console","log","catch","err","setTimeout","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c7eafd0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = ({ search }) => (\n  <p>\n    filter shown with\n    <input type=\"search\" onChange={search} />\n  </p>\n);\n\nexport default Search;\n","import React from \"react\";\n\nconst AddContact = props => {\n  return (\n    <div>\n      <div>\n        <p>\n          name:{\" \"}\n          <input\n            type=\"text\"\n            value={props.newName}\n            onChange={props.handleName}\n          />\n        </p>\n        <p>\n          number:\n          <input\n            type=\"tel\"\n            value={props.newNumber}\n            onChange={props.handleNumber}\n          />\n        </p>\n      </div>\n      <div>\n        <button onClick={props.handleClick} disabled={props.buttonStatus}>\n          add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\n\nconst ShowContacts = ({ people }) => {\n  return (\n    <ul>\n       {people}\n    </ul>\n  );\n};\n\nexport default ShowContacts;\n","import React from 'react';\n\nconst Person = ({ person, removeContact }) => {\n  return (\n    <li className=\"person\">\n      {person.name} {person.number}\n      <button onClick={removeContact}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nconst Notification = ({ message, messageClass }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={messageClass}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\nconst deleteOne = id => {\n  axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, deleteOne };\n","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport Search from \"./components/search\";\nimport AddContact from \"./components/addContact\";\nimport ShowContacts from \"./components/showContacts\";\nimport Person from \"./components/person\";\nimport Notification from \"./components/notification\";\nimport contactService from \"./services/contactsService\";\nimport Axios from \"axios\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filtered, setFilterd] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [messageClass, setMessageClass] = useState(\"\");\n  let buttonStatus = !newName || !newNumber;\n\n  const addContact = event => {\n    event.preventDefault();\n    let person = {\n      name: newName,\n      number: newNumber\n    };\n\n    const duplicate = persons.some(elem => elem.name === person.name);\n    if (!duplicate) {\n      console.log(person);\n      contactService\n        .create(person)\n        .then(res => {\n          console.log(res);\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setErrorMessage(`Added ${person.name}`);\n          setMessageClass(\"success\");\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          const message = error.response.data;\n          console.log(message);\n          setErrorMessage(message.error);\n          setMessageClass(\"error\");\n          setTimeout(() => setErrorMessage(null), 5000);\n        });\n    } else {\n      if (\n        window.confirm(\n          `${person.name} is already added to contacts. Replace old number with new one?`\n        )\n      ) {\n        let elem = persons.find(elem => elem.name === person.name);\n        contactService\n          .update(elem.id, person)\n          .then(res => console.log(res))\n          .catch(err => {\n            setErrorMessage(`contact ${person.name} was already deleted`);\n            setMessageClass(\"error\");\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setPersons(persons.filter(person => elem.id !== person.id));\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    }\n  };\n\n  const handleName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumber = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearch = event => {\n    setNewFilter(String(event.target.value));\n    let data = persons.filter(elem => elem.name.includes(newFilter));\n    setFilterd(data);\n  };\n\n  const deleteContact = id => {\n    const contact = persons.find(person => person.id === id);\n    if (window.confirm(`Do you really want to delete '${contact.name}'?`)) {\n      contactService.deleteOne(contact.id).then(res => {\n        setPersons(persons.map(person => person));\n      });\n    }\n\n    Axios.delete(\n      `https://floating-bayou-11024.herokuapp.com/api/persons/${contact.id}`\n    );\n  };\n\n  let display = newFilter !== \"\" ? filtered : persons;\n\n  let people = display.map(person => (\n    <Person\n      key={person.id}\n      person={person}\n      removeContact={() => deleteContact(person.id)}\n    />\n  ));\n\n  useEffect(() => {\n    contactService.getAll().then(allContacts => {\n      setPersons(allContacts);\n    });\n  }, []);\n  const notification = errorMessage ? (\n    <Notification message={errorMessage} messageClass={messageClass} />\n  ) : null;\n  return (\n    <Fragment>\n      <h1> Phonebook </h1>\n      {notification}\n      <form>\n        <Search search={handleSearch} />\n        <h2>Add a new contact</h2>\n        <AddContact\n          newName={newName}\n          handleName={handleName}\n          newNumber={newNumber}\n          handleNumber={handleNumber}\n          buttonStatus={buttonStatus}\n          handleClick={addContact}\n        />\n        <h2> Numbers </h2>\n        <ShowContacts people={people} />\n      </form>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}